import { useState, useEffect } from "react";

import Head from "next/head";
import Link from "next/link";
import Image from "next/image";

import Clock from "@/components/Clock";
import Celebrate from "@/components/Celebrate";
import Footer from "@/components/Footer";
import BirthdayList from "@/components/BirthdayList";
import styles from "@/styles/Home.module.css";

import { checkCelebrate } from "@/utils/helpers";
import { birthdays } from "@/utils/BIRTHDAYS";

import prisma from "@/lib/prisma";
import { signIn, useSession, signOut } from "next-auth/react";

export default function Home({ birthdayList }) {
  const { data: session, status } = useSession();

  const [name, setName] = useState(checkCelebrate(birthdayList));
  const [userInfo, setUserInfo] = useState({ email: "", password: "" });

  const handleSubmit = (e) => {
    e.preventDefault();

    signIn("credentials", {
      email: userInfo.email,
      password: userInfo.password,
      redirect: false,
    });
  };

  return (
    <>
      <Head>
        <title>It is your birthday</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/*spinner */}
      {status === "loading" && <div>Spinner</div>}
      <div className="App">
        {/* {name !== "" ? (
          <Celebrate name={name} />
        ) : (
          <Clock birthdays={birthdayList} />
        )} */}

        {/* LOGIN */}
        {!session && (
          <div className={styles.login}>
            <h1>It is your birthday.</h1>
            <p>Please log in to see your upcoming birthdays</p>

            <form className={styles.form} onSubmit={handleSubmit}>
              <input
                type="email"
                name="email"
                id="email"
                placeholder="Enter your email . . ."
                value={userInfo.email}
                onChange={({ target }) =>
                  setUserInfo({ ...userInfo, email: target.value })
                }
              />
              <input
                type="password"
                name="password"
                id="password"
                placeholder="Enter your password . . ."
                value={userInfo.password}
                onChange={({ target }) =>
                  setUserInfo({ ...userInfo, password: target.value })
                }
              />
              <input type="submit" value="Login" />
            </form>
          </div>
        )}
        {session && (
          <div>
            <h1>{session.user.email}</h1>
            <Clock birthdays={birthdayList} />
            <button
              onClick={() => {
                signOut;
              }}
            >
              Sign out
            </button>
          </div>
        )}
        <Footer />
        <BirthdayList list={birthdayList} />
        {/* <Link href="/admin" className="userLink">
          <Image width={30} height={30} src="/user-icon.svg" alt="user icon" />
        </Link> */}
      </div>
    </>
  );
}

export const getStaticProps = async () => {
  const birthdayList = await prisma.birthday.findMany();
  return {
    props: { birthdayList },
  };
};
// export async function getServerSideProps() {
//   const url =
//     process.env.NODE_ENV === "development"
//       ? "http://localhost:3000"
//       : "https://itisyourbirthday.vercel.app";

//   let res = await fetch(url + "/api/getBirthdays")
//     .then((res) => res.json())
//     .then((data) => {
//       return data;
//     });

//   let birthdays = await res;

//   return {
//     props: { birthdays },
//   };
// }
